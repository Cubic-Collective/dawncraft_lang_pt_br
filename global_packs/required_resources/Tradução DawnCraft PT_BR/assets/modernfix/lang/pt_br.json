{
  "key.modernfix": "ModernFix",
  "key.modernfix.config": "Abrir tela de configuração",
  "modernfix.jei_load": "Carregando JEI, isso pode levar um tempo",
  "modernfix.no_lazydfu": "LazyDFU não está instalado. Se o Minecraft precisar atualizar os dados do jogo de uma versão mais antiga, pode haver um atraso perceptível.",
  "modernfix.no_ferritecore": "FerriteCore is not installed. Memory usage will be very high.",
  "modernfix.perf_mod_warning": "It is recommended to install the mods, but the warning(s) can be disabled in the ModernFix config.",
  "modernfix.config": "Configuração do ModernFix mixin",
  "modernfix.config.done_restart": "Concluído (reinicialização necessária)",
  "modernfix.option.on": "ligado",
  "modernfix.option.off": "desligado",
  "modernfix.config.not_default": " (modificado)",
  "asynclocator.map.locating": "Mapa (Localizando...)",
  "asynclocator.map.none": "Mapa (Nenhuma estrutura próxima encontrada)",
  "modernfix.option.category.performance": "Desempenho",
  "modernfix.option.category.performance.description": "Recursos que ajudam a melhorar o desempenho do jogo/lançamento",
  "modernfix.option.category.bugfixes": "Correções de bugs",
  "modernfix.option.category.bugfixes.description": "Correções principais de bugs para melhorar a estabilidade do jogo",
  "modernfix.option.category.troubleshooting": "Solucionando problemas/Utilidades",
  "modernfix.option.category.troubleshooting.description": "Recursos destinados a ajudar no diagnóstico de problemas",
  "modernfix.option.category.expert_only": "Apenas para especialistas",
  "modernfix.option.category.expert_only.description": "Não altere, a menos que você saiba o que está fazendo",
  "modernfix.option.name.mixin.perf.async_jei": "Carregando o JEI em segundo plano",
  "modernfix.option.mixin.perf.async_jei": "Apenas na versão 1.16. **Uma otimização importante.** Modifica o JEI para executar sua recarga em uma thread em segundo plano, eliminando completamente o longo atraso que ele adiciona ao carregamento do mundo.",
  "modernfix.option.mixin.perf.async_locator": "Apenas na versão 1.16. Implementa as correções do mod Async Locator para eliminar os congelamentos do servidor associados a comandos como `/locate`, geração de tabelas de loot, etc.",
  "modernfix.option.mixin.perf.biome_zoomer": "Apenas na versão 1.16. Pequena otimização para melhorar o desempenho do zoomer de biomas utilizando a lógica da versão 1.18.",
  "modernfix.option.mixin.perf.blast_search_trees": "Todas as versões. Se você tiver o REI ou JEI instalados, a construção das árvores de busca vanilla para pesquisa criativa é desativada e a pesquisa é feita usando as funções de pesquisa desses mods. Isso reduz vários segundos durante o carregamento do mundo e provavelmente também economiza um pouco de RAM (embora eu não tenha medido).",
  "modernfix.option.mixin.perf.boost_worker_count": "Apenas na versão 1.16. Remove o limite fixo na contagem de threads de trabalho, seguindo a mesma abordagem adotada pela Mojang na versão 1.18.",
  "modernfix.option.mixin.perf.cache_blockstate_cache_arrays": "Todas as versões. Evita criar novas cópias de matrizes enum toda vez que um cache de blockstate é inicializado. Pequena otimização, mas de fácil implementação.",
  "modernfix.option.mixin.perf.cache_model_materials": "Todas as versões. Agora memorizamos a coleção de `RenderMaterial` (textura) e a lista de dependências que os modelos retornam, em vez de precisar recalculá-las a cada solicitação. Isso ajuda a acelerar o processo de carregamento e preparação dos modelos.",
  "modernfix.option.mixin.perf.cache_strongholds": "Todas as versões. Salva a lista gerada de posições de fortalezas no mundo, em vez de regenerá-la a cada carregamento do mundo. Isso economiza um pouco de tempo na versão 1.16 e um tempo significativamente maior nas versões 1.18 e 1.19.",
  "modernfix.option.mixin.perf.cache_upgraded_structures": "Todas as versões. Muitos mods fornecem arquivos de estruturas desatualizados, o que faz com que o jogo precise atualizá-los usando DFU toda vez que são carregados. Isso pode ser um processo bastante lento. Este patch adiciona uma lógica para salvar a versão atualizada da estrutura e reutilizá-la no próximo carregamento. Para lidar com o caso em que o mod altera um arquivo de estrutura, mas mantém o mesmo nome, é comparado o hash do arquivo original com a versão em cache. Se os hashes não corresponderem, a estrutura será atualizada novamente.",
  "modernfix.option.mixin.perf.compress_biome_container": "Apenas na versão 1.16. Pequena otimização emprestada do mod Hydrogen, que tenta economizar espaço no contêiner de biomas quando possível. Isso é desativado automaticamente se houver mods conflitantes instalados, como BetterEnd ou Chocolate.",
  "modernfix.option.mixin.perf.datapack_reload_exceptions": "Todas as versões. Reduz o volume de logs e possivelmente melhora ligeiramente a velocidade de carregamento ao não imprimir os rastreamentos de pilha para algumas exceções comuns durante a recarga de pacotes de dados (por exemplo, itens ausentes em tabelas de loot/receitas). A mensagem ainda é exibida.",
  "modernfix.option.mixin.perf.dedicated_reload_executor": "Todas as versões. Move a recarga de pacotes de recursos e datapacks para um grupo de trabalhadores dedicados, em vez de usar as threads padrão `Worker-Main`. Isso permite que os mods com inicialização suave ainda possam potencialmente melhorar o desempenho para um único jogador em tempo de execução, sem desacelerar o lançamento devido a uma contagem limitada de threads.",
  "modernfix.option.mixin.perf.deduplicate_location": "Todas as versões, mas desabilitado por padrão devido ao impacto no tempo de carregamento. Realiza a duplicação dos espaços de nomes e caminhos das localizações de recursos. Isso economiza RAM, mas também aumenta significativamente o custo de construir uma nova `ResourceLocation`.",
  "modernfix.option.mixin.perf.dynamic_dfu": "Todas as versões. Modifica a inicialização do DFU para ocorrer apenas quando algo precisa ser atualizado. Isso parece ser semelhante ao LazyDFU, mas é implementado de forma distinta, pois evita carregar *qualquer* classe ou estrutura de dados do DFU, enquanto o LazyDFU apenas desativa a otimização de regras. Essencialmente, esta opção é uma versão mais segura do DataFixerSlayer, pois o DFU ainda será carregado quando necessário.\n\nNormalmente, é recomendado continuar usando o LazyDFU mesmo com esta opção ativada, pois a otimização de regras do DFU pode causar atrasos (lag).",
  "modernfix.option.mixin.perf.dynamic_resources": "Todas as versões. Consulte https://github.com/embeddedt/ModernFix/wiki/Dynamic-Resources-FAQ.",
  "modernfix.option.mixin.perf.dynamic_structure_manager": "Todas as versões. Permite que o jogo descarregue os arquivos de estrutura após a geração ser concluída, em vez de mantê-los carregados permanentemente.",
  "modernfix.option.mixin.perf.fast_registry_validation": "Todas as versões. Forge desnecessariamente procura um método por reflexão toda vez que um registro é validado. Este patch simplesmente armazena em cache o valor retornado, pois ele será o mesmo toda vez.",
  "modernfix.option.mixin.perf.faster_font_loading": "Todas as versões. Otimiza o renderizador de fontes para carregar as fontes mais rapidamente, acelerando a recarga de recursos.",
  "modernfix.option.mixin.perf.faster_item_rendering": "Todas as versões. Evita renderizar os lados dos itens nos GUIs. (Sim, aparentemente a versão vanilla faz isso.) Isso pode triplicar o FPS em GPUs mais fracas, quando usado com um mod como REI/JEI, se houver itens suficientes visíveis. Desativado por padrão, pois é uma adição recente e ainda não foi amplamente testada, mas deve ser segura. O problema mais provável é que os itens fiquem completamente invisíveis nas GUIs ou pareçam planos no mundo.",
  "modernfix.option.mixin.perf.faster_texture_loading": "Todas as versões anteriores à 1.19.4. Evita ler texturas duas vezes (a primeira vez usando um caminho de código muito lento) e, em vez disso, faz um carregamento mais rápido (semelhante ao 1.19.3+).",
  "modernfix.option.mixin.perf.faster_texture_stitching": "Todas as versões. Habilita o jogo a usar um sistema de montagem de textura mais rápido, originalmente escrito por SuperCoder79 para o mod lwjgl3ify na versão 1.7.10, o que pode economizar algum tempo durante o carregamento. Raramente, foi relatado que isso pode causar artefatos estranhos em blocos ou GUIs, isso pode ser um bug do Sodium.",
  "modernfix.option.mixin.perf.jeresources_startup": "Apenas na versão 1.16. Otimiza o mod Just Enough Resources para não recriar desnecessariamente entidades de aldeão várias vezes para a mesma profissão, o que economiza tempo durante o início do JEI.",
  "modernfix.option.mixin.perf.kubejs": "Apenas na versão 1.16. Otimizações no KubeJS para evitar cópias desnecessárias de `ItemStack`, etc. o que reduz o tempo necessário para carregar datapacks.",
  "modernfix.option.mixin.perf.model_optimizations": "Todas as versões. Implementa otimizações para acelerar o processo de carregamento de modelos.",
  "modernfix.option.mixin.perf.nbt_memory_usage": "Todas as versões. Utiliza um mapa de suporte mais eficiente para tags NBT compostas, que elimina nomes de chaves duplicados e também usa um mapa de matriz para compostos muito pequenos. Isso reduz a sobrecarga de armazenar muitas tags compostas na memória.",
  "modernfix.option.mixin.perf.nuke_empty_chunk_sections": "Apenas na versão 1.16, inspirado pelo Hydrogen. Evita armazenar seções de chunks que estão cheias de ar na memória, marcando-as como vazias.",
  "modernfix.option.mixin.perf.reduce_blockstate_cache_rebuilds": "Todas as versões. **Uma otimização fundamental.** Em versões mais recentes do Minecraft (após a 1.12), foi implementado um sistema de cache de estados de bloco que armazena informações frequentemente usadas sobre um estado de bloco, como se é sólido, sua forma de colisão, etc. Reconstruir esse cache é bastante rápido no jogo vanilla (leva apenas um ou dois segundos), mas se torna muito lento com muitos mods instalados, já que há muitos mais estados de bloco presentes no jogo, e todos precisam ter seus caches reconstruídos.\n\nEsse problema é exacerbado pelo Forge, pois o cache é reconstruído em muitos momentos em que os dados quase certamente não serão usados antes da próxima reconstrução. Exemplos disso incluem logo antes de chegar ao menu principal (durante a fase de \"Congelamento de dados\"), bem como várias (!) vezes quando um mundo está sendo carregado.\n\nO ModernFix resolve esse gargalo de desempenho tornando as reconstruções do cache preguiçosas. Cada estado de bloco reconstrói seu cache apenas na primeira vez em que os dados serão acessados. Em qualquer momento em que o vanilla ou o Forge tentariam reconstruir caches para todos os estados de bloco, isso é redirecionado para simplesmente invalidar o cache em cada estado de bloco.\n\nIsso não deve ter nenhum impacto na taxa de ticks após o início do jogo.",
  "modernfix.option.mixin.perf.remove_biome_temperature_cache": "Todas as versões. Remove o cache de temperatura de biomas, assim como o Lithium faz nas versões modernas.",
  "modernfix.option.mixin.perf.resourcepacks": "Todas as versões. **Uma otimização chave.** Os lançamentos em versões modernas são fortemente limitados pelo acesso ao sistema de arquivos. Muitas solicitações são feitas com frequência aos pacotes de recursos para listar recursos ou verificar se um determinado recurso existe, e cada uma delas resulta em uma chamada muito lenta à API de arquivo.\n\nO ModernFix elimina completamente a maior parte do gargalo aqui, simplesmente armazenando em cache uma lista de todos os recursos existentes nos pacotes de recursos fornecidos pelos mods e no pacote de recursos padrão do jogo. O cache é reconstruído quando os recursos são recarregados (exceto para os recursos padrão do jogo, já que eles não devem mudar enquanto o jogo estiver sendo executado).\n\nNão há problemas conhecidos de compatibilidade com este patch, exceto com o OptiFine (seus recursos CTM não são carregados corretamente). No entanto, não recomendo o uso do OptiFine em nenhuma situação, pois ele adiciona vários minutos ao tempo de inicialização por si só e não foi testado com o ModernFix.",
  "modernfix.option.mixin.perf.reuse_datapacks": "Apenas na versão 1.16. Tenta acelerar a alternância entre mundos de jogador único, evitando a recarga de datapacks quando possível. Isso pode causar problemas de compatibilidade com alguns mods, mas está habilitado por padrão no momento.",
  "modernfix.option.mixin.perf.rewrite_registry": "Todas as versões. Atualmente, está parcialmente infuncional. Substitui agressivamente algumas partes internas do sistema de registro do Forge por versões mais rápidas, no entanto, no momento, isso causa congelamentos ao carregar alguns modpacks. Desativado por padrão por razões óbvias.",
  "modernfix.option.mixin.perf.skip_first_datapack_reload": "Apenas 1.16 e 1.19. **Uma otimização importante.** \n\nNo meio do ciclo de desenvolvimento da versão 1.16, o Forge fez uma correção no jogo para recarregar os datapacks duas vezes ao carregar um mundo existente, a fim de corrigir um problema com o deslocamento dos IDs de biomas. Infelizmente, as recargas de datapacks geralmente levam mais de 30 segundos, o que afeta gravemente os tempos de carregamento do mundo.\n\nO ModernFix faz as alterações necessárias para evitar essa recarga, com base na proposta inacabada do Forge PR #8163.\n\nEssa alteração foi removida pelo Forge na versão 1.18, mas uma correção semelhante foi adicionada *novamente* na versão 1.19 para corrigir o problema de datapacks de mods não serem carregados ao criar novos mundos para um jogador. Felizmente, o problema está localizado na tela de criação de mundos na versão 1.19, e mundos existentes requerem apenas uma recarga. No entanto, isso ainda dobra o tempo de latência ao clicar em \"Criar Novo Mundo\" na versão 1.19, e, portanto, o ModernFix novamente faz alterações para evitar uma recarga redundante.",
  "modernfix.option.mixin.perf.state_definition_construct": "Todas as versões. Ativado apenas se o FerriteCore estiver instalado. Aproveita o tratamento de blockstates do FerriteCore para acelerar a criação delas. Isso pode ajudar a acelerar o lançamento com mods que adicionam muitas blockstates, como mods de móveis.",
  "modernfix.option.mixin.perf.sync_executor_sleep": "Todas as versões. Evita que a thread principal fique ociosa consumindo um núcleo da CPU enquanto espera os trabalhadores de carregamento de mods terminarem.",
  "modernfix.option.mixin.perf.thread_priorities": "Todas as versões. Ajusta as prioridades das threads de trabalho e servidor para serem mais baixas do que a thread do cliente. Isso ajuda a melhorar a estabilidade dos FPS em máquinas com poucos núcleos de CPU, desde que a implementação Java utilizada respeite as prioridades.",
  "modernfix.option.mixin.perf.use_integrated_resources": "Principalmente para a versão 1.16. Faz ajustes no JEResources para utilizar os dados da tabela de loots do servidor integrado quando no singleplayer, ao invés de recarregar desnecessariamente as tabelas de loot. Isso economiza alguns segundos extras durante a inicialização do JEI.",
  "modernfix.option.mixin.bugfix.concurrency": "Os patches neste grupo corrigem problemas relacionados à concorrência dentro do Minecraft e/ou Forge. A maioria deles resulta em travamentos raros e difíceis de diagnosticar durante o carregamento do jogo.",
  "modernfix.option.mixin.bugfix.edge_chunk_not_saved": "Esta opção é uma versão do mod Chunk Saving Fix do SuperCoder (porque eu não percebi que já estava disponível para Forge na época).",
  "modernfix.option.mixin.bugfix.mc218112": "Essa opção corrige um impasse que pode ocorrer se uma exceção for lançada durante o processamento dos dados da entidade. O Vanilla não desbloqueia corretamente o gerenciador de dados quando deveria. Esse problema está registrado como MC-218112 no rastreador de bugs e foi corrigido pela Mojang na versão 1.17.",
  "modernfix.option.mixin.bugfix.packet_leak": "**Experimental**, não ativado por padrão. Uma tentativa de correção para o problema de vazamento de memória que ocorre após jogar por tempo suficiente na versão 1.16.",
  "modernfix.option.mixin.bugfix.paper_chunk_patches": "1.18 e versões mais recentes. **Uma otimização importante.** Porta um patch do Paper que corrige problemas na versão 1.17 relacionados ao carregamento de chunks, que exigia grandes quantidades de memória e gerava muitas instâncias de `CompletableFuture`. A partir da versão 1.18, é possível carregar mundos com apenas 400MB de memória, como na versão 1.16.",
  "modernfix.option.mixin.bugfix.tf_cme_on_load": "Patches Twilight Forest para executar a configuração do cliente, que não é segura para threads, usando a thread principal, como deveria, em vez da thread de trabalho do FML.",
  "modernfix.option.mixin.feature.branding": "Adiciona ModernFix à lista de marcas na tela de título e também à tela F3.",
  "modernfix.option.mixin.feature.direct_stack_trace": "Normalmente desativado, pode ser ativado para forçar o rastreamento da pilha bruta a ser registrado no log quando ocorre um travamento. Às vezes, o sistema de relatório de travamento do vanilla falha e fornece um relatório/rastreamento de pilha inteiramente irrelevante.",
  "modernfix.option.mixin.feature.measure_time": "Utiliza algumas injeções para medir o tempo de carregamento do mundo, o tempo de recarregamento dos datapacks, o tempo de recarregamento dos recursos, o tempo de inicialização e adiciona os ganchos necessários para habilitar a lógica do perfilador não utilizada do vanilla para o recarregamento de recursos, se configurado dessa forma.",
  "modernfix.option.mixin.feature.spam_thread_dump": "**Apenas para uso em depuração.** Causa um despejo de thread a ser exibido no log a cada 60 segundos. Isso pode ajudar a diagnosticar congelamentos inexplicáveis durante o carregamento ou jogabilidade."
}
